{"ast":null,"code":"//TODO: create contact using all actions\nimport { SET_CONTACT, SET_LOADING, CONTACT_TO_UPDATE, SET_SINGLE_CONTACT } from \"./action.types\"; //TODO: use switch case\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case SET_CONTACT:\n      return action.payload == null ? { ...state,\n        contacts: []\n      } : { ...state,\n        contacts: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case CONTACT_TO_UPDATE:\n      return { ...state,\n        contactToUpdate: action.payload,\n        contactToUpdateKey: action.key\n      };\n\n    case SET_SINGLE_CONTACT:\n      return { ...state,\n        contact: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/shiva/OneDrive/Desktop/ReactJS/contacts-app/src/context/reducer.js"],"names":["SET_CONTACT","SET_LOADING","CONTACT_TO_UPDATE","SET_SINGLE_CONTACT","state","action","type","payload","contacts","isLoading","contactToUpdate","contactToUpdateKey","key","contact"],"mappings":"AAAA;AAEA,SACEA,WADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,kBAJF,QAKO,gBALP,C,CAOA;;AACC,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AACE,aAAOK,MAAM,CAACE,OAAP,IAAkB,IAAlB,GAAyB,EAAC,GAAGH,KAAJ;AAAWI,QAAAA,QAAQ,EAAC;AAApB,OAAzB,GACP,EAAC,GAAGJ,KAAJ;AAAWI,QAAAA,QAAQ,EAAEH,MAAM,CAACE;AAA5B,OADA;;AAED,SAAKN,WAAL;AACE,aAAO,EAAC,GAAGG,KAAJ;AAAWK,QAAAA,SAAS,EAAEJ,MAAM,CAACE;AAA7B,OAAP;;AACF,SAAKL,iBAAL;AACE,aAAM,EACJ,GAAGE,KADC;AAEJM,QAAAA,eAAe,EAAEL,MAAM,CAACE,OAFpB;AAGJI,QAAAA,kBAAkB,EAAEN,MAAM,CAACO;AAHvB,OAAN;;AAKF,SAAKT,kBAAL;AACE,aAAM,EACJ,GAAGC,KADC;AAEJS,QAAAA,OAAO,EAAER,MAAM,CAACE;AAFZ,OAAN;;AAIF;AACE,aAAOH,KAAP;AAlBL;AAoBD,CArBD","sourcesContent":["//TODO: create contact using all actions\n\nimport {\n  SET_CONTACT,\n  SET_LOADING,\n  CONTACT_TO_UPDATE,\n  SET_SINGLE_CONTACT\n} from \"./action.types\";\n\n//TODO: use switch case\n export default (state, action) => {\n   switch (action.type) {\n     case SET_CONTACT:\n       return action.payload == null ? {...state, contacts:[]} :\n       {...state, contacts: action.payload};\n      case SET_LOADING:\n        return {...state ,isLoading: action.payload}\n      case CONTACT_TO_UPDATE:\n        return{\n          ...state,\n          contactToUpdate: action.payload,\n          contactToUpdateKey: action.key\n        }\n      case SET_SINGLE_CONTACT:\n        return{\n          ...state,\n          contact: action.payload\n        }\n      default:\n        return state;\n   }\n }\n\n"]},"metadata":{},"sourceType":"module"}